name: Deploy CashCached to Azure

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

# Needed for Azure OIDC
permissions:
  id-token: write
  contents: read

concurrency:
  group: cashcached-deploy
  cancel-in-progress: false

env:
  # AZURE (already created by you)
  AZURE_RESOURCE_GROUP: cashcached1-rg
  AZURE_WEBAPP_NAME: cashcached-api
  # STATIC WEB APPS
  AZURE_SWA_NAME: cashcached-frontend
  # RUNTIME VERSIONS
  JAVA_VERSION: "17"
  NODE_VERSION: "20"

jobs:
  backend:
    name: Build & Deploy Backend (Spring Gateway in /main)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ env.JAVA_VERSION }}

      - name: Cache Maven
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2/repository
          key: maven-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            maven-${{ runner.os }}-

      - name: Build (Maven) - main service
        working-directory: ./main
        run: mvn -B -DskipTests package

      - name: Azure login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Push App Settings to App Service
        run: |
          az webapp config appsettings set \
            --resource-group "${{ env.AZURE_RESOURCE_GROUP }}" \
            --name "${{ env.AZURE_WEBAPP_NAME }}" \
            --settings \
              POLYGON_AMOY_RPC_URL='${{ secrets.POLYGON_AMOY_RPC_URL }}' \
              TREASURY_PRIVATE_KEY='${{ secrets.TREASURY_PRIVATE_KEY }}' \
              CASHCACHED_OWNER_ADDRESS='${{ secrets.CASHCACHED_OWNER_ADDRESS }}' \
              CASHCACHED_CONTRACT_ADDRESS='${{ secrets.CASHCACHED_CONTRACT_ADDRESS }}' \
              CASHCACHED_TREASURY_ADDRESS='${{ secrets.CASHCACHED_TREASURY_ADDRESS }}' \
              SPRING_MAIL_HOST='${{ secrets.SPRING_MAIL_HOST }}' \
              SPRING_MAIL_PORT='${{ secrets.SPRING_MAIL_PORT }}' \
              SPRING_MAIL_USERNAME='${{ secrets.SPRING_MAIL_USERNAME }}' \
              SPRING_MAIL_PASSWORD='${{ secrets.SPRING_MAIL_PASSWORD }}' \
              SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH='${{ secrets.SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH }}' \
              SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE='${{ secrets.SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE }}'

      - name: Deploy JAR to App Service
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          package: main/target/*.jar

  frontend:
    name: Build & Deploy Frontend (Vite in /main/frontend â†’ SWA)
    runs-on: ubuntu-latest
    needs: backend

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Cache npm
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: npm-${{ runner.os }}-${{ hashFiles('main/frontend/package-lock.json') }}
          restore-keys: |
            npm-${{ runner.os }}-

      - name: Install & Build
        working-directory: ./main/frontend
        env:
          # Only include if safe for client-side; otherwise proxy via backend
          VITE_GEMINI_API_KEY: ${{ secrets.VITE_GEMINI_API_KEY }}
        run: |
          npm ci
          npm run build

      - name: Deploy to Azure Static Web Apps
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          app_location: "main/frontend"
          output_location: "dist"
